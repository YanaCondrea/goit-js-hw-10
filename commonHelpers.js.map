{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport error from '../img/error.svg'\n\n\nconst inputDatetimeRef = document.querySelector('#datetime-picker');\nconst buttonStartRef = document.querySelector('button');\nconst divTimerRef = document.querySelector('.timer');\nconst timerDays = document.querySelector('[data-days]');\nconst timerHours = document.querySelector('[data-hours]');\nconst timerMinutes = document.querySelector('[data-minutes]');\nconst timerSeconds = document.querySelector('[data-seconds]');\n\nconst div = document.createElement('div');\ndiv.className += 'container';\ndiv.appendChild(inputDatetimeRef);\ndiv.appendChild(buttonStartRef);\ndiv.appendChild(divTimerRef)\nconst sectionRef = document.querySelector('section');\nsectionRef.insertAdjacentElement('afterend', div);\n\nbuttonStartRef.addEventListener('click', onButtonStartTimer);\n\nbuttonStartRef.disabled = true;\n\nlet userSelectedDate;\nlet timerId;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n    minuteIncrement: 1,\n  onClose(selectedDates) {\n    \n      if (selectedDates[0].getTime() > Date.now()) { \n        buttonStartRef.disabled = false; \n        userSelectedDate = selectedDates[0].getTime();\n          \n      } else {\n        iziToast.show({\n          backgroundColor: '#ef4040',\n          close: false,\n          closeOnClick: true,\n          progressBarColor: 'white',\n          title: 'Error',\n          titleColor: 'white',\n          iconUrl: error,\n          position: 'topCenter',\n          icon: 'icon-error.svg',\n          messageColor: 'white',\n          messageSize: '16px',\n    message: 'Please choose a date in the future'\n});\n        \n        buttonStartRef.disabled = true;      \n      }\n      \n  },\n};\nflatpickr(inputDatetimeRef, options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\n\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nfunction onButtonStartTimer() {\n\n  buttonStartRef.disabled = true;\n  inputDatetimeRef.disabled = true;\n\n  timerId = setInterval(() => {\n    const result = userSelectedDate - Date.now();\n    const { days, hours, minutes, seconds } = convertMs(result);\n\n    timerDays.textContent = addLeadingZero(days);\n    timerHours.textContent = addLeadingZero(hours);\n    timerMinutes.textContent = addLeadingZero(minutes);\n    timerSeconds.textContent = addLeadingZero(seconds);\n\n    if (result < 1000) {\n      clearInterval(timerId);\n      inputDatetimeRef.disabled = false;\n    }\n    }, 1000)      \n         \n     }\n\n\n\n\n\n\n\n\n"],"names":["inputDatetimeRef","buttonStartRef","divTimerRef","timerDays","timerHours","timerMinutes","timerSeconds","div","sectionRef","onButtonStartTimer","userSelectedDate","timerId","options","selectedDates","iziToast","error","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","result"],"mappings":"2IAQA,MAAMA,EAAmB,SAAS,cAAc,kBAAkB,EAC5DC,EAAiB,SAAS,cAAc,QAAQ,EAChDC,EAAc,SAAS,cAAc,QAAQ,EAC7CC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAEtDC,EAAM,SAAS,cAAc,KAAK,EACxCA,EAAI,WAAa,YACjBA,EAAI,YAAYP,CAAgB,EAChCO,EAAI,YAAYN,CAAc,EAC9BM,EAAI,YAAYL,CAAW,EAC3B,MAAMM,EAAa,SAAS,cAAc,SAAS,EACnDA,EAAW,sBAAsB,WAAYD,CAAG,EAEhDN,EAAe,iBAAiB,QAASQ,CAAkB,EAE3DR,EAAe,SAAW,GAE1B,IAAIS,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACf,gBAAiB,EACnB,QAAQC,EAAe,CAEfA,EAAc,CAAC,EAAE,QAAO,EAAK,KAAK,OACpCZ,EAAe,SAAW,GAC1BS,EAAmBG,EAAc,CAAC,EAAE,QAAO,IAG3CC,EAAS,KAAK,CACZ,gBAAiB,UACjB,MAAO,GACP,aAAc,GACd,iBAAkB,QAClB,MAAO,QACP,WAAY,QACZ,QAASC,EACT,SAAU,YACV,KAAM,iBACN,aAAc,QACd,YAAa,OACnB,QAAS,oCACb,CAAC,EAEOd,EAAe,SAAW,GAG/B,CACH,EACAe,EAAUhB,EAAkBY,CAAO,EAEnC,SAASK,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIL,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC,EAI/B,SAASM,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEA,SAASf,GAAqB,CAE5BR,EAAe,SAAW,GAC1BD,EAAiB,SAAW,GAE5BW,EAAU,YAAY,IAAM,CAC1B,MAAMc,EAASf,EAAmB,KAAK,IAAG,EACpC,CAAE,KAAAS,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUQ,CAAM,EAE1DtB,EAAU,YAAcoB,EAAeJ,CAAI,EAC3Cf,EAAW,YAAcmB,EAAeH,CAAK,EAC7Cf,EAAa,YAAckB,EAAeF,CAAO,EACjDf,EAAa,YAAciB,EAAeD,CAAO,EAE7CG,EAAS,MACX,cAAcd,CAAO,EACrBX,EAAiB,SAAW,GAE7B,EAAE,GAAI,CAEX"}